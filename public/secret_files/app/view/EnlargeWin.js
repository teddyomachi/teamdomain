/*
 * File: app/view/EnlargeWin.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.view.EnlargeWin', {
	extend: 'Ext.window.Window',

	html: '<div>This is an area to show contents.</div>',
	id: 'enlargeWin',
	itemId: 'enlargeWin',
	layout: {
		type: 'fit'
	},
	title: '拡大表示',
        constrain: true,
	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			tpl: [
				'<table>',
				'<tr>',
				'	<td>',
				'		<tpl>',
				'			<tpl if="t_file_type == \'mp4\'">',
				'				<video controls width="1280px" height="720px">',
				'					<source src="{url}" type=\'video/mp4; codecs="avc1.42E01E, mp4a.40.2"\' />',
				'					<p>動画を再生するには<br/>videoタグをサポートした<br/>ブラウザが必要です</p>',
				'				</video>',
				'			</tpl>',
				'			<tpl if="t_file_type == \'ogg\'">',
				'				<video controls width="1280px" height="720px">',
				'					<source src="{url}" type=\'video/ogg; codecs="theora, vorbis"\' />',
				'					<p>動画を再生するには<br/>videoタグをサポートした<br/>ブラウザが必要です</p>',
				'				</video>',
				'			</tpl>',
				'			<tpl if="t_file_type == \'png\'">',
				'				<span>',
				'					<img src="{url}" style="max-width:500px;max-height: 380px" />',
				'				</span><br/>',
				'			</tpl>',
				'		</tpl>',
				'	</td>',
				'</tr>',
				'</table>'
			],
			dockedItems: [
				{
					xtype: 'toolbar',
					dock: 'bottom',
					ui: 'footer',
					items: [
						{
							xtype: 'tbfill'
						},
						{
							xtype: 'button',
							width: 100,
							text: 'キャンセル',
							listeners: {
								click: {
									fn: me.onButtonClick11,
									scope: me
								}
							}
						}
					]
				}
			]
		});

		me.callParent(arguments);
	},

	onButtonClick11: function(button, e, eOpts) {
		this.close();

	}

});
