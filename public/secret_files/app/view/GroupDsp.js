/*
 * File: app/view/GroupDsp.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.view.GroupDsp', {
    extend: 'Ext.window.Window',
    alias: 'widget.GroupDsp',
    height: 600,
    hidden: false,
    id: 'groupDsp',
    itemId: 'groupDsp',
    width: 950,
    modal: true,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    constrain: true,
    title: 'グループ編集',
    initComponent: function () {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    frame: true,
                    id: 'myGroups',
                    autoScroll: true,
                    layout: {
                        align: 'stretch',
                        type: 'vbox'
                    },
                    bodyPadding: 5,
                    items: [
                        {
                            xtype: 'fieldset',
                            height: 50,
                            id: 'newGroup',
                            margin: 0,
                            padding: '0 5 5 10',
                            layout: {
                                type: 'fit'
                            },
                            title: 'グループを作成',
                            items: [
                                {
                                    xtype: 'fieldcontainer',
                                    width: 400,
                                    layout: {
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            flex: 1.2,
                                            margin: 0,
                                            fieldLabel: '新規グループ名',
                                            labelWidth: 120,
                                            name: 'new_my_group',
                                            id:'new_my_group'
                                        },
                                        {
                                            xtype: 'splitter'
                                        },
                                        {
                                            xtype: 'textfield',
                                            flex: 0.8,
                                            hidden: true,
                                            fieldLabel: '説明',
                                            labelAlign: 'right',
                                            labelWidth: 40,
                                            name: 'new_group_description',
                                            allowBlank: false
                                        },
                                        {
                                            xtype: 'splitter',
                                            width: 10
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function () {
                                                if (Busy === true) {
                                                    return;
                                                }
                                                Busy = true;

                                                var formX = this.up('form').getForm().getFieldValues();

                                                //if (formX.new_my_group === '' || formX.new_group_description === '') {
                                                if (formX.new_my_group === '') {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        //title:'新規グループ名・説明入力',
                                                        //msg: '新規グループ名/説明を入力して下さい。',
                                                        title: '新規グループ名入力',
                                                        msg: '新規グループ名を入力してください',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }
                                                if (formX.new_my_group.trim().length < 1)
                                                {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        //title:'新規グループ名・説明入力',
                                                        //msg: '新規グループ名/説明を入力して下さい。',
                                                        title: '新規グループ名入力',
                                                        msg: '半角、全角スペースのみは許可されません。',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }

                                                formX = Ext.apply({session_id: this_session_id}, formX);
                                                dataY = Ext.apply({request_type: "create_my_group"}, formX);

                                                Ext.Ajax.request({
                                                    url: 'tdx/updatedata.tdx',
                                                    method: 'POST',
                                                    jsonData: dataY,
                                                    success: handleSuccess,
                                                    failure: handleFailure
                                                });

                                                function handleSuccess(response) {
                                                    obj = Ext.decode(response.responseText);
                                                    var request_success = obj.success;

                                                    if (request_success === false) {
                                                        Busy = false;
                                                        var request_errors = obj.errors;
                                                        Ext.Msg.show({
                                                            title: '新規グループ作成失敗',
                                                            msg: request_errors,
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    } else {
                                                        Ext.Msg.show({
                                                            title: '新規グループ作成成功',
                                                            msg: '新規グループを作成しました',
                                                            buttons: Ext.Msg.OK,
                                                            fn: function (btn)
                                                            {
                                                                if (btn === 'ok')
                                                                {
                                                                    Ext.getStore('GroupCreatedStore').load();
                                                                    Ext.getStore('MemberTreeStore').load();
                                                                }
                                                            }
                                                        });
                                                        var thisForm = Ext.ComponentQuery.query('#myGroups')[0].getForm().setValues(
                                                                {
                                                                    new_my_group: ''
                                                                }
                                                        );
                                                        Busy = false;
                                                    }
                                                }

                                                function handleFailure(response) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: '新規グループ作成失敗',
                                                        msg: 'サーバとの通信に失敗しました',
                                                        buttons: Ext.Msg.OK
                                                    });
                                                }

                                            },
                                            width: 100,
                                            text: '作成',
                                            tooltip: {
                                                html: '新規グループを入力した通りに作成します。'
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            height: 80,
                            id: 'createdGroup',
                            margin: '3 0 5 0',
                            padding: '0 5 5 10',
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            title: 'グループを選択',
                            items: [
                                {
                                    xtype: 'fieldcontainer',
                                    height: 24,
                                    width: 400,
                                    layout: {
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            id: 'myMembers',
                                            labelWidth: 120,
                                            name: 'my_group',
                                            selectOnFocus: true,
                                            editable: false,
                                            displayField: 'group_name',
                                            forceSelection: true,
                                            store: 'GroupCreatedStore',
                                            valueField: 'group_id',
                                            listeners: {
                                                select: {
                                                    fn: me.onComboboxSelect,
                                                    scope: me
                                                },
                                                beforequery: {
                                                    fn: me.onMyMembersBeforeQuery,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            hidden: true,
                                            fieldLabel: '説明',
                                            labelAlign: 'right',
                                            labelWidth: 40,
                                            name: 'group_description',
                                            allowBlank: false
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            fieldLabel: 'Label',
                                            name: 'target_hash_key'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldcontainer',
                                    height: 23,
                                    padding: '0 0 0 0',
                                    width: 400,
                                    layout: {
                                        align: 'stretch',
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            margin: 0,
                                            fieldLabel: 'グループ名の変更',
                                            labelWidth: 120,
                                            name: 'changed_group_name',
                                            id:'changed_group_name'
                                        },
                                        {
                                            xtype: 'splitter'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function (button, event) {
                                                if (Busy === true) {
                                                    return;
                                                }
                                                Busy = true;

                                                var formX = this.up('form').getForm().getFieldValues();

                                                if (Ext.isEmpty(formX.my_group)) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: '作成グループ名選択',
                                                        msg: '作成したグループ名を選択してください',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }
                                                
                                                if (formX.changed_group_name.trim().length < 1)
                                                {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        //title:'新規グループ名・説明入力',
                                                        //msg: '新規グループ名/説明を入力して下さい。',
                                                        title: '変更グループ名入力',
                                                        msg: '空白、スペースのみは許可されません。',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }

                                                formX = Ext.apply({session_id: this_session_id}, formX);
                                                var dataY = Ext.apply({request_type: "change_my_group_name"}, formX);

                                                Ext.Ajax.request({
                                                    url: 'tdx/updatedata.tdx',
                                                    method: 'POST',
                                                    jsonData: dataY,
                                                    success: handleSuccess,
                                                    failure: handleFailure
                                                });

                                                function handleSuccess(response) {
                                                    obj = Ext.decode(response.responseText);
                                                    var request_success = obj.success;

                                                    if (request_success === false) {
                                                        Busy = false;
                                                        var request_errors = obj.errors;
                                                        Ext.Msg.show({
                                                            title: 'グループ名変更失敗',
                                                            msg: request_errors,
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    } else {
                                                        Ext.Msg.show({
                                                            title: 'グループ名変更成功',
                                                            msg: 'グループ名を変更しました',
                                                            buttons: Ext.Msg.OK,
                                                            fn: function (btn)
                                                            {
                                                                if (btn === 'ok')
                                                                {
                                                                    Ext.getStore('GroupCreatedStore').load();
                                                                    Ext.getCmp('my_group_bar').moveFirst();
                                                                    Ext.getStore('MemberTreeStore').load();
                                                                }
                                                            }
                                                        });
                                                        var thisForm = Ext.ComponentQuery.query('#myGroups')[0].getForm().setValues(
                                                                {
                                                                    changed_group_name: ''
                                                                }
                                                        );
                                                        Busy = false;
                                                    }
                                                    return;
                                                }

                                                function handleFailure(response) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: 'グループ名変更失敗',
                                                        msg: 'サーバとの通信に失敗しました',
                                                        buttons: Ext.Msg.OK
                                                    });
                                                }
                                            },
                                            margin: '0 0 0 3',
                                            width: 80,
                                            text: '名称変更',
                                            tooltip: {
                                                html: '選択したグループの名称を変更します。'
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function (button, event) {
                                                if (Busy === true) {
                                                    return;
                                                }
                                                Busy = true;

                                                var formX = this.up('form').getForm().getFieldValues();

                                                if (Ext.isEmpty(formX.my_group)) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: '作成グループ名選択',
                                                        msg: '作成したグループ名を選択してください',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }

                                                formX = Ext.apply({session_id: this_session_id}, formX);
                                                var dataY = Ext.apply({request_type: "delete_my_group"}, formX);

                                                Ext.Ajax.request({
                                                    url: 'tdx/updatedata.tdx',
                                                    method: 'POST',
                                                    jsonData: dataY,
                                                    success: handleSuccess,
                                                    failure: handleFailure
                                                });

                                                function handleSuccess(response) {
                                                    obj = Ext.decode(response.responseText);
                                                    var request_success = obj.success;

                                                    if (request_success === false) {
                                                        Busy = false;
                                                        var request_errors = obj.errors;
                                                        Ext.Msg.show({
                                                            title: 'グループ削除失敗',
                                                            msg: request_errors,
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    } else {
                                                        Ext.Msg.show({
                                                            title: 'グループ削除成功',
                                                            msg: 'グループを削除しました',
                                                            buttons: Ext.Msg.OK,
                                                            fn: function (btn)
                                                            {
                                                                if (btn === 'ok')
                                                                {
                                                                    Ext.getStore('GroupCreatedStore').load();
                                                                    Ext.getStore('MemberDataStore').loadData([],false);
                                                                    Ext.getCmp('my_group_bar').moveFirst();
                                                                    Ext.getStore('MemberTreeStore').load();
                                                                }
                                                            }
                                                        });
                                                        Busy = false;
                                                    }
                                                    return;
                                                }

                                                function handleFailure(response) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: 'グループ削除失敗',
                                                        msg: 'サーバとの通信に失敗しました',
                                                        buttons: Ext.Msg.OK
                                                    });
                                                }
                                            },
                                            margin: '0 0 0 3',
                                            width: 90,
                                            text: 'グループ削除',
                                            tooltip: {
                                                html: '選択したグループを削除します。'
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            itemId: 'groupMembers',
                            padding: '0 0 0 0',
                            autoScroll: true,
                            store: 'MemberDataStore',
                            /*viewConfig: {
                                emptyText: 'データがありません'
                            },*/
                            selModel: Ext.create('Ext.selection.CheckboxModel', {
                            }),
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'group_name',
                                    text: 'グループ名',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    sortable: false,
                                    dataIndex: 'group_description',
                                    hideable: false,
                                    text: 'グループ説明',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 140,
                                    sortable: false,
                                    dataIndex: 'group_id',
                                    hideable: false,
                                    text: 'グループID'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'member_name',
                                    text: 'メンバー名',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    sortable: false,
                                    dataIndex: 'member_description',
                                    hideable: false,
                                    text: 'メンバー補助名',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    sortable: false,
                                    dataIndex: 'member_id',
                                    hideable: false,
                                    text: 'メンバーID'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 142,
                                    sortable: false,
                                    dataIndex: 'member_remark',
                                    hideable: false,
                                    text: 'メンバー特記',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    sortable: false,
                                    dataIndex: 'data_class',
                                    hideable: false
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    padding: 0,
                                    ui: 'footer',
                                    layout: {
                                        padding: 0,
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            handler: function () {
                                                if (Busy === true) {
                                                    return;
                                                }
                                                Busy = true;

                                                var componentG = Ext.getCmp('myGroups');
                                                var gridG = componentG.down('#groupMembers');

                                                var records = gridG.getSelectionModel().getSelection(), data = [];

                                                if (Ext.isEmpty(records)) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: 'メンバー選択',
                                                        msg: 'メンバーを選択してください',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }

                                                for (var i = 0; i < records.length; i++) {
                                                    data.push(records[i].data);
                                                }

                                                var formX = this.up('form').getForm().getFieldValues();


                                                if (formX.my_group === '') {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: 'グループ選択',
                                                        msg: 'グループを選択してください',
                                                        icon: Ext.Msg.ERROR,
                                                        buttons: Ext.Msg.OK
                                                    });
                                                    return;
                                                }

                                                var dataY = Ext.apply(formX, data);
                                                dataY = Ext.apply({session_id: this_session_id}, dataY);
                                                var dataZ = Ext.apply({request_type: "dismiss_group_members"}, dataY);

                                                Ext.Ajax.request({
                                                    url: 'tdx/updatedata.tdx',
                                                    jsonData: dataZ,
                                                    success: handleSuccess,
                                                    failure: handleFailure
                                                });

                                                function handleSuccess(response) {
                                                    obj = Ext.decode(response.responseText);
                                                    var request_success = obj.success;

                                                    if (request_success === false) {
                                                        Busy = false;
                                                        var request_errors = obj.errors;
                                                        Ext.Msg.show({
                                                            title: 'グループ除外失敗',
                                                            msg: request_errors,
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    } else {
                                                        Ext.getCmp('my_group_bar').moveFirst();
                                                        Ext.getStore('MemberTreeStore').load();
                                                        Busy = false;
                                                    }
                                                    return;
                                                }

                                                function handleFailure(response) {
                                                    Busy = false;
                                                    Ext.Msg.show({
                                                        title: 'グループ除外失敗',
                                                        msg: 'サーバとの通信に失敗しました',
                                                        buttons: Ext.Msg.OK
                                                    });
                                                }
                                            },
                                            itemId: 'deleteMember',
                                            margin: 0,
                                            width: 100,
                                            icon: 'data/small_icon/delete.png',
                                            text: 'メンバー除外',
                                            tooltip: {
                                                html: '選択したメンバーをグループから除外します。'
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    id: 'my_group_bar',
                                    displayInfo: true,
                                    store: 'MemberDataStore',
                                    listeners: {
                                        afterrender: {
                                            fn: me.onMy_group_barAfterRender,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    flex: 1,
                    frame: true,
                    id: 'wholeGroups',
                    autoScroll: true,
                    layout: {
                        align: 'stretch',
                        padding: 0,
                        type: 'vbox'
                    },
                    bodyPadding: 5,
                    items: [
                        {
                            xtype: 'fieldset',
                            height: 50,
                            id: 'searchGroup',
                            margin: '0 0 4 0',
                            padding: '0 5 5 10',
                            title: 'メンバーを検索',
                            items: [
                                {
                                    xtype: 'textfield',
                                    margin: 0,
                                    id: 'searching_group',
                                    fieldLabel: '検索メンバー名',
                                    name: 'searching_group',
                                    validateOnChange: false,
                                    validateOnBlur: false,
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    hidden: true,
                                    fieldLabel: 'メンバー追加先グループのhash',
                                    labelWidth: 150,
                                    name: 'target_hash_key'
                                },
                                {
                                    xtype: 'button',
                                    handler: function (button, event) {
                                        if (Busy === true) {
                                            return;
                                        }
                                        Busy = true;

                                        var formX = this.up('form').getForm().getFieldValues();

                                        if (formX.searching_group === '') {
                                            Busy = false;
                                            Ext.Msg.show({
                                                title: '検索グループ名入力',
                                                msg: '検索グループ名を入力してください',
                                                icon: Ext.Msg.ERROR,
                                                buttons: Ext.Msg.OK
                                            });
                                            return;
                                        }

                                        if (formX.searching_group.trim().length < 1)
                                        {
                                            Busy = false;
                                            Ext.Msg.show({
                                                //title:'新規グループ名・説明入力',
                                                //msg: '新規グループ名/説明を入力して下さい。',
                                                title: '検索グループ名入力',
                                                msg: '半角、全角スペースのみは許可されません。',
                                                icon: Ext.Msg.ERROR,
                                                buttons: Ext.Msg.OK
                                            });
                                            return;
                                        }

                                        formX = Ext.apply({session_id: this_session_id}, formX);
                                        dataY = Ext.apply({request_type: "search_all_groups"}, formX);

                                        store = Ext.getStore('MemberTreeStore');
                                        field_data = Ext.getCmp('searching_group');
                                        Ext.apply(store.proxy.extraParams,
                                                {
                                                    group_name: formX.searching_group
                                                });
                                        store.load({callback: function (rec, opt, success)
                                            {
                                                Busy = false;
                                            }
                                        });
                                        /*Ext.Ajax.request({
                                         url: 'tdx/updatedata.tdx',
                                         method: 'POST',
                                         jsonData: dataY,
                                         success: handleSuccess,
                                         failure: handleFailure
                                         });*/
                                        Ext.Msg.show({
                                            title: 'グループ検索中',
                                            msg: 'グループ検索中です'
                                        });

                                        /*function handleSuccess(response) {
                                         obj = Ext.decode(response.responseText);
                                         var request_success = obj.success;
                                         console.log(obj);
                                         if (request_success === false) {
                                         Busy = false;
                                         var request_errors = obj.errors;
                                         Ext.Msg.hide();
                                         Ext.Msg.show({
                                         title:'グループ検索失敗',
                                         msg: request_errors,
                                         buttons: Ext.Msg.OK
                                         });
                                         } else {
                                         Ext.Msg.hide();
                                         Ext.getCmp('group_all_bar').moveFirst();
                                         Busy = false;
                                         }
                                         return;
                                         }
                                         
                                         function handleFailure(response) {
                                         Busy = false;
                                         Ext.Msg.hide();
                                         Ext.Msg.show({
                                         title:'グループ検索失敗',
                                         msg: 'サーバとの通信に失敗しました',
                                         buttons: Ext.Msg.OK
                                         });
                                         }*/

                                    },
                                    margin: '-39 0 0 270',
                                    width: 100,
                                    text: '検索 ',
                                    tooltip: {
                                        html: '指定した条件によって、グループを検索します。'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'treepanel',
                            flex: 1,
                            itemId: 'groupList',
                            id: 'groupList',
                            padding: '0 0 0 0',
                            store: 'MemberTreeStore',
                            rootVisible: false,
                            useArrows: true,
                            viewConfig:
                                    {
                                        emptyText: 'データがありません'
                                    },
                            listeners:
                                    {
                                        checkchange: function (node, checked, options)
                                        {
                                            if (!node.isLeaf())
                                            {
                                                var cn = node.childNodes;
                                                var len = cn.length;
                                                if (len > 0)
                                                {
                                                    if (checked)
                                                    {
                                                        for (var i = 0; i < len; i++)
                                                        {
                                                            cn[i].data.checked = true;
                                                        }
                                                        node.collapse();
                                                        node.expand();
                                                    }
                                                    else
                                                    {
                                                        for (var i = 0; i < len; i++)
                                                        {
                                                            cn[i].data.checked = false;
                                                        }
                                                        node.collapse();
                                                        //node.expand();
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                var count=0;
                                                var len=node.parentNode.childNodes.length;
                                                var p_node=node.parentNode;
                                                for(var i=0;i<len;i++)
                                                {
                                                    if(p_node.childNodes[i].data.checked)
                                                    {
                                                        count++;
                                                    }
                                                }
                                                if(count>=len)
                                                {
                                                    p_node.data.checked=true;
                                                    p_node.collapse();
                                                    p_node.expand();
                                                }
                                                else
                                                {
                                                    p_node.data.checked=false;
                                                }
                                                //p_node.collapse();
                                                //p_node.expand();
                                            }
                                        }
                                    },
                            dockedItems:
                                    [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            items:
                                                    [
                                                        {
                                                            xtype: 'button',
                                                            width: 100,
                                                            icon: 'data/small_icon/add.png',
                                                            text: 'メンバー追加',
                                                            tooltip:
                                                                    {
                                                                        html: '選択したグループ、メンバーを左のグループのメンバーとして追加します。'
                                                                    },
                                                            handler: function (button, event)
                                                            {
                                                                if (Busy === true) {
                                                                    return;
                                                                }
                                                                Busy = true;
                                                                //var componentG = Ext.getCmp('wholeGroups');
                                                                //var gridG = componentG.down('#groupList');
                                                                //var records = gridG.getSelectionModel().getSelection(), data = [];
                                                                var data = [];
                                                                var records = Ext.getCmp('groupList').getChecked();
                                                                if (Ext.isEmpty(records))
                                                                {
                                                                    Busy = false;
                                                                    Ext.Msg.show(
                                                                            {
                                                                                title: 'メンバー選択',
                                                                                msg: 'メンバーを選択してください',
                                                                                icon: Ext.Msg.ERROR,
                                                                                buttons: Ext.Msg.OK
                                                                            });
                                                                    return;
                                                                }

                                                                for (var i = 0; i < records.length; i++)
                                                                {
                                                                    data.push(records[i].raw);
                                                                }

                                                                var send_data = [];
                                                                var formX = this.up('form').getForm().getFieldValues();
                                                                var index = 0;
                                                                for (var i = 0; i < data.length; i++)
                                                                {
                                                                    if (data[i]["leaf"] === true)
                                                                    {
                                                                        send_data[index] = data[i];
                                                                        index++;
                                                                    }
                                                                }
                                                                var dataY = Ext.apply(formX, send_data);
                                                                dataY = Ext.apply({session_id: this_session_id}, dataY);
                                                                var dataZ = Ext.apply({request_type: "append_my_group_members"}, dataY);

                                                                if (Ext.getCmp('myMembers').displayTplData.length > 0)
                                                                {
                                                                    dataZ = Ext.apply({gid: Ext.getCmp('myMembers').displayTplData[0].group_id}, dataZ);
                                                                }
                                                                else
                                                                {
                                                                    Busy = false;
                                                                    Ext.Msg.show(
                                                                            {
                                                                                title: 'グループ選択',
                                                                                msg: 'グループを選択してください',
                                                                                icon: Ext.Msg.ERROR,
                                                                                buttons: Ext.Msg.OK
                                                                            });
                                                                    return;
                                                                }
                                                                Ext.Ajax.request(
                                                                        {
                                                                            url: 'tdx/updatedata.tdx',
                                                                            jsonData: dataZ,
                                                                            success: handleSuccess,
                                                                            failure: handleFailure
                                                                        });

                                                                function handleSuccess(response)
                                                                {
                                                                    obj = Ext.decode(response.responseText);
                                                                    var request_success = obj.success;
                                                                    if (request_success === false)
                                                                    {
                                                                        Busy = false;
                                                                        var request_errors = obj.errors;
                                                                        Ext.Msg.show(
                                                                                {
                                                                                    title: 'メンバー追加失敗',
                                                                                    msg: request_errors,
                                                                                    buttons: Ext.Msg.OK
                                                                                });
                                                                    }
                                                                    else
                                                                    {
                                                                        Ext.getCmp('my_group_bar').moveFirst();
                                                                        Ext.getStore('MemberTreeStore').load();
                                                                        Busy = false;
                                                                    }
                                                                    return;
                                                                }

                                                                function handleFailure(response)
                                                                {
                                                                    Busy = false;
                                                                    Ext.Msg.show(
                                                                            {
                                                                                title: 'メンバー追加失敗',
                                                                                msg: 'サーバとの通信に失敗しました',
                                                                                buttons: Ext.Msg.OK
                                                                            });
                                                                }
                                                            }
                                                        }
                                                    ]
                                        }
                                    ]
                        }
                        /*{
                         xtype: 'gridpanel',
                         flex: 1,
                         itemId: 'groupList',
                         padding: '0 0 0 0',
                         autoScroll: true,
                         store: 'GroupAllStore',
                         viewConfig: {
                         frame: true,
                         emptyText: 'データがありません'
                         },
                         selModel: Ext.create('Ext.selection.CheckboxModel', {
                         
                         }),
                         columns: [
                         {
                         xtype: 'gridcolumn',
                         width: 120,
                         dataIndex: 'member_name',
                         text: 'メンバー名',
                         flex: 1
                         },
                         {
                         xtype: 'gridcolumn',
                         draggable: false,
                         hidden: true,
                         hideMode: 'offsets',
                         width: 120,
                         sortable: false,
                         dataIndex: 'group_description',
                         hideable: false,
                         text: 'グループ説明',
                         flex: 1
                         },
                         {
                         xtype: 'gridcolumn',
                         hidden: true,
                         width: 80,
                         sortable: false,
                         dataIndex: 'group_id',
                         hideable: false,
                         text: 'グループID'
                         },
                         //								{
                         //									xtype: 'gridcolumn',
                         //									dataIndex: 'member_name',
                         //									text: '',
                         //									flex: 1
                         //								},
                         {
                         xtype: 'gridcolumn',
                         hidden: true,
                         sortable: false,
                         dataIndex: 'member_description',
                         hideable: false,
                         text: 'メンバー補助名',
                         flex: 1
                         },
                         {
                         xtype: 'gridcolumn',
                         hidden: true,
                         width: 150,
                         sortable: false,
                         dataIndex: 'member_id',
                         hideable: false,
                         text: 'メンバーID'
                         }
                         ],
                         features: [
                         {
                         ftype: 'grouping',
                         enableGroupingMenu: false,
                         groupHeaderTpl: '{name}',
                         startCollapsed: false
                         }
                         ],
                         dockedItems: [
                         {
                         xtype: 'toolbar',
                         dock: 'bottom',
                         padding: 0,
                         ui: 'footer',
                         layout: {
                         padding: 0,
                         type: 'hbox'
                         },
                         items: [
                         {
                         xtype: 'button',
                         handler: function(button, event) {
                         if (Busy === true) {return;}
                         Busy = true;
                         
                         var componentG = Ext.getCmp('wholeGroups');
                         var gridG = componentG.down('#groupList');
                         
                         var records = gridG.getSelectionModel().getSelection(), data = [];
                         
                         if (Ext.isEmpty(records)) {
                         Busy = false;
                         Ext.Msg.show({
                         title:'メンバー選択',
                         msg: 'メンバーを選択してください',
                         icon: Ext.Msg.ERROR,
                         buttons: Ext.Msg.OK
                         });
                         return;
                         }
                         
                         for (var i = 0; i < records.length; i++) {
                         data.push(records[i].data);
                         }
                         
                         var formX = this.up('form').getForm().getFieldValues();
                         var dataY = Ext.apply(formX, data);
                         dataY = Ext.apply({session_id: this_session_id}, dataY);
                         var dataZ = Ext.apply({request_type: "append_my_group_members"},dataY);
                         
                         Ext.Ajax.request({
                         url: 'tdx/updatedata.tdx',
                         jsonData: dataZ,
                         success: handleSuccess,
                         failure: handleFailure
                         });
                         
                         function handleSuccess(response) {
                         obj = Ext.decode(response.responseText);
                         var request_success = obj.success;
                         
                         if (request_success === false) {
                         Busy = false;
                         var request_errors = obj.errors;
                         Ext.Msg.show({
                         title:'メンバー追加失敗',
                         msg: request_errors,
                         buttons: Ext.Msg.OK
                         });
                         } else {
                         Ext.getCmp('my_group_bar').moveFirst();
                         //Ext.getCmp('group_all_bar').moveFirst();
                         Busy = false;
                         }
                         return;
                         }
                         
                         function handleFailure(response) {
                         Busy = false;
                         Ext.Msg.show({
                         title:'メンバー追加失敗',
                         msg: 'サーバとの通信に失敗しました',
                         buttons: Ext.Msg.OK
                         });
                         }
                         },
                         width: 100,
                         icon: 'data/small_icon/add.png',
                         text: 'メンバー追加',
                         tooltip: {
                         html: '選択したグループ、メンバーを左のグループのメンバーとして追加します。'
                         }
                         }
                         ]
                         },
                         {
                         xtype: 'pagingtoolbar',
                         dock: 'bottom',
                         id: 'group_all_bar',
                         displayInfo: true,
                         store: 'GroupAllStore'
                         }
                         ]
                         }*/
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },
    onComboboxSelect: function (combo, records, eOpts) {
        var selected_group = records[0].raw;

        var formX = Ext.apply({'selected_group': selected_group});
        formX = Ext.apply({session_id: this_session_id}, formX);
        var dataY = Ext.apply({request_type: "select_my_group"}, formX);

        Ext.Ajax.request({
            url: 'tdx/updatedata.tdx',
            method: 'POST',
            jsonData: dataY,
            success: handleSuccess,
            failure: handleFailure
        });

        function handleSuccess(response) {
            obj = Ext.decode(response.responseText);
            var request_success = obj.success;

            if (request_success === false) {
                var request_errors = obj.errors;
                Ext.Msg.show({
                    title: '作成グループ選択失敗',
                    msg: request_errors,
                    buttons: Ext.Msg.OK
                });
            } else {
                Ext.getCmp('my_group_bar').moveFirst();
            }
            return;
        }

        function handleFailure(response) {
            Ext.Msg.show({
                title: '作成グループ選択失敗',
                msg: 'サーバとの通信に失敗しました',
                buttons: Ext.Msg.OK
            });
        }
    },
    onMyMembersBeforeQuery: function (queryEvent, eOpts) {
        Ext.getStore('GroupCreatedStore').load();

    },
    onMy_group_barAfterRender: function (component, eOpts) {
        Ext.getCmp('my_group_bar').moveFirst();
        component.child('#refresh').hide();
    }
});