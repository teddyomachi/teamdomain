/*
 * File: app/view/LoginWin.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LoginWin', {
    extend: 'Ext.window.Window',
    border: false,
    draggable: false,
    height: 350,
    hidden: false,
    itemId: 'loginWin',
    width: 410,
    resizable: false,
    layout: {
        type: 'fit'
    },
    closable: false,
    title: 'BOOMBOX  Ver. 1.3.0',
    plain: true,
    initComponent: function () {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    id: 'loginForm',
                    itemId: 'loginForm',
                    layout: {
                        type: 'absolute'
                    },
                    bodyPadding: 10,
                    bodyStyle: {
                        'background-image': 'url(data/login.png)'
                    },
                    timeout: 0,
                    url: 'login.php',
                    items: [
                        {
                            xtype: 'textfield',
                            x: 220,
                            y: 20,
                            style: {
                                color: '#FFF',
                                'font-weight': 'bold',
                                'font-size': '11px'
                            },
                            fieldLabel: 'ユーザ名',
                            labelAlign: 'top',
                            labelWidth: 80,
                            name: 'loginUsername',
                            id: 'loginUsername',
                            allowBlank: false,
                            blankText: '入力が必須です。　',
                            listeners:
                                    {
                                        afterrender: function ()
                                        {
                                            Ext.getCmp('loginUsername').focus();       
                                        }
                                    }
                        },
                        {
                            xtype: 'textfield',
                            x: 220,
                            y: 70,
                            style: {
                                color: '#FFF',
                                'font-weight': 'bold',
                                'font-size': '11px'
                            },
                            fieldLabel: 'パスワード',
                            labelAlign: 'top',
                            labelWidth: 80,
                            name: 'loginPassword',
                            inputType: 'password'
                        },
                        {
                            xtype: 'button',
                            x: 270,
                            y: 130,
                            formBind: true,
                            style: {
                                'font-weight': 'bold',
                                'font-size': '11pt'
                            },
                            width: 100,
                            text: 'ログイン',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 270,
                            y: 165,
                            width: 100,
                            text: 'マニュアル',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick1,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbspacer',
                            flex: 1
                        },
                        {
                            xtype: 'tbtext',
                            text: '(c)  2018  MAKEWAVE JAPAN Co.,Ltd. All rights reserved.'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },
    onButtonClick: function (button, e, eOpts) {
        var inputtedValues = button.up().getForm().getValues();
        var user_name = inputtedValues.loginUsername;

        var form = button.up().getForm().submit({
            method: 'POST',
            waitTitle: 'ログイン認証中です。',
            waitMsg: 'しばらくお待ちください...',
            // Success function
            success: function (form, action) {
                obj = Ext.JSON.decode(action.response.responseText);
                Ses_id = obj.session;
                //var redirect = '../ihab411/index.html?ses_id=' + Ses_id;
                var redirect = '../ihab/index.html?ses_id=' + Ses_id;
                var activation_status = obj.status;
                UserId = obj.u_id;
                if (activation_status === 1024) {
                    window.location = redirect;
                } else {
                    button.up('.window').close();
                    loggedInUserName = user_name;
                    Ext.create('MyApp.view.ActivationWin').show();
                    Ext.ComponentQuery.query('#activationForm')[0].getForm().setValues({
                        user_id: UserId,
                        user_name: user_name
                    });
                }

            },
            // Failure function, see comment above re: success and failure. 
            // You can see here, if login fails, it throws a messagebox
            // at the user telling him / her as much.  

            failure: function (form, action) {
                if (action.failureType == 'server') {
                    obj = Ext.JSON.decode(action.response.responseText);
                    Ext.Msg.alert('ログイン失敗', obj.errors);
                } else {
                    Ext.Msg.alert('注意!', '認証サーバに接続できませんでした。');
                }
                //Ext.getCmp('loginForm').getForm().reset();
                Ext.ComponentQuery.query('#loginForm')[0].getForm().reset();
            }
        });
    },
    onButtonClick1: function (button, e, eOpts) {
        window.open('help/index.html', 'help');
    }

});
