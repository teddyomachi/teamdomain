/*
 * File: app/view/SearchDsp.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.view.SearchDsp', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.searchdsp',
    id: 'searchDsp',
    title: 'フォルダ検索結果',
    activeTab: 0,
    initComponent: function () {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    id: 'listDspS',
                    layout: {
                        type: 'fit'
                    },
                    title: 'List表示',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'btn_max_disp_s',
                                    margin: '0 0 0 5',
                                    icon: 'data/small_icon/ZoomDai.png',
                                    tooltip: '大きく表示します。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onListMaxDispSBtnClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    id: 'btn_mdl_disp_s',
                                    icon: 'data/small_icon/ZoomTyu.png',
                                    tooltip: 'デフォルト表示します。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onListMdlDispSBtnClick,
                                            scope: me
                                        }
                                    }

                                },
                                {
                                    xtype: 'button',
                                    id: 'btn_min_disp_s',
                                    icon: 'data/small_icon/ZoomSyo.png',
                                    tooltip: '小さく表示します。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onListMinDispsBtnClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'tbfill'
                                },
                                {
                                    xtype: 'button',
                                    id: 'btn_searchDisp_close',
                                    icon: 'data/small_icon/ng_icon.png',
                                    tooltip: '検索結果を閉じます。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onSearchDispClose,
                                            scope: me
                                        }
                                    }

                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'gridpanel',
                            id: 'searchedListGridPanel',
                            autoScroll: true,
                            store: 'FileDataStoreS',
                            viewConfig: {
                                emptyText: 'データがありません'
                            },
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<img src="' + record.data.thumbnail_image + '" style="max-width:25px;max-height: 25px"/>';                                                                                            /*
                                         if (record.data.file_type === 'folder') {
                                         return '<img src="data/small_icon/folder.png" />';
                                         } else {
                                         return '<img src="data/small_icon/file.png" />';
                                         }
                                         */
                                    },
                                    width: 35,
                                    dataIndex: 'type',
                                    text: 'TP'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                        if (record.data.lock === '1') {
                                            return '<img src="data/small_icon/my_locked.png" />';
                                        } else if (record.data.lock == '2') {
                                            return '<img src="data/small_icon/locked.png" />';
                                            /*
                                             } else if (record.data.lock == '4') {
                                             return '<img src="data/small_icon/sco.png" />';
                                             } else if (record.data.lock == '8') {
                                             return '<img src="data/small_icon/eco.png" />';
                                             */
                                        } else {
                                            return;
                                        }
                                    },
                                    hidden: true,
                                    itemId: 'LC',
                                    width: 25,
                                    dataIndex: 'lc',
                                    hideable: false,
                                    text: 'ST'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 61,
                                    dataIndex: 'name_lc_by',
                                    hideable: false,
                                    text: '操作者名'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    minWidth: 150,
                                    width: 150,
                                    dataIndex: 'file_name',
                                    text: '名前',
                                    flex: 1
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 50,
                                    dataIndex: 'file_type',
//									dataIndex: 't_file_type',
                                    text: '種類'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    width: 30,
                                    align: 'right',
                                    dataIndex: 'file_version',
                                    text: 'Ver',
                                    format: '0'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 100,
                                    align: 'right',
                                    renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                        var file_size = record.data.file_size;
                                        var file_type = record.data.file_type;
                                        if (file_type === "folder") {
                                            return "-";
                                        } else if (file_size < 1024) {
                                            return "1 KB";
                                        } else if (file_size < 1048576) {
                                            return (Math.round(file_size / 1024)) + " KB";
                                        } else {
                                            return (Math.round(file_size / 1024 / 1024)) + " MB";
                                        }
                                    },
                                    dataIndex: 'file_size',
                                    text: 'サイズ'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 250,
                                    dataIndex: 'url',
                                    hideable: false,
                                    text: 'URL'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 250,
                                    dataIndex: 'url',
                                    hideable: false,
                                    text: 'パス'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 100,
                                    dataIndex: 'keyword',
                                    hideable: false,
                                    text: 'キーワード'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 180,
                                    dataIndex: 'description',
                                    text: '説明'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 140,
                                    dataIndex: 'created_at',
                                    text: '作成日',
                                    format: 'Y-m-d H:i:s'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 80,
                                    dataIndex: 'creator',
                                    text: '作成者'
                                },
                                {
                                    xtype: 'datecolumn',
                                    width: 140,
                                    dataIndex: 'updated_at',
                                    text: '更新日',
                                    format: 'Y-m-d H:i:s'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 80,
                                    dataIndex: 'modifier',
                                    text: '更新者'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 80,
                                    dataIndex: 'owner',
                                    text: '所有者'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 25,
                                    dataIndex: 'ownership',
                                    text: '所有権'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    width: 25,
                                    dataIndex: 'check',
                                    hideable: false,
                                    text: 'チェックイン'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'thumnail_image',
                                    hideable: false,
                                    text: 'image'
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    id: 'filesS_list',
                                    displayInfo: true,
                                    store: 'FileDataStoreS'
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {
                                mode: 'SINGLE'
                            }),
                            listeners: {
                                itemcontextmenu: {
                                    fn: me.onSearchedListGridPanelItemContextMenu,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    id: 'thumbBlockS',
                    autoScroll: true,
                    layout: {
                        type: 'fit'
                    },
                    title: 'Thumbnail表示',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'btn_max_disp_sb',
                                    margin: '0 0 0 5',
                                    icon: 'data/small_icon/ZoomDai.png',
                                    tooltip: '大きく表示します。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onBoxMaxDispSBtnClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    id: 'btn_mdl_disp_sb',
                                    icon: 'data/small_icon/ZoomTyu.png',
                                    tooltip: 'デフォルト表示します。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onBoxMdlDispSBtnClick,
                                            scope: me
                                        }
                                    }

                                },
                                {
                                    xtype: 'button',
                                    id: 'btn_min_disp_sb',
                                    icon: 'data/small_icon/ZoomSyo.png',
                                    tooltip: '小さく表示します。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onBoxMinDispSBtnClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'tbfill'
                                },
                                {
                                    xtype: 'button',
                                    id: 'btn_searchDisp_close_sb',
                                    icon: 'data/small_icon/ng_icon.png',
                                    tooltip: '検索結果を閉じます。',
                                    tooltipType: 'title',
                                    listeners: {
                                        click: {
                                            fn: me.onSearchDispClose,
                                            scope: me
                                        }
                                    }

                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'panel',
                            autoScroll: true,
                            layout: {
                                type: 'fit'
                            },
                            items: [
                                {
                                    xtype: 'dataview',
                                    prepareData: function (data) {
                                        var box_class = 'thumb-wrapSB';
                                        var icon_width = '200';
                                        var icon_height = '140';
                                        if (boxDispSizeS === 'max') {
                                            box_class = 'thumb-wrapSB-max';
                                            icon_width = '300';
                                            icon_height = '240';
                                        } else if (boxDispSizeS === 'min') {
                                            box_class = 'thumb-wrapSB-min';
                                            icon_width = '80';
                                            icon_height = '50';
                                        }

                                        var lock_check = "";
                                        if (data.lock === 0) {
                                            lock_check = "small_icon/no_locked.png";
                                        }
                                        if (data.lock === 1) {
                                            lock_check = "small_icon/my_locked.png";
                                        }
                                        if (data.lock === 2) {
                                            lock_check = "small_icon/locked.png";
                                        }
                                        if (data.lock === 4) {
                                            lock_check = "small_icon/sco.png";
                                        }
                                        if (data.lock === 8) {
                                            lock_check = "small_icon/eco.png";
                                        }

                                        var fileSizeUpper = data.file_size_upper;
                                        var fileSize = data.file_size;
                                        var size = fileSizeUpper * Math.pow(2, 31) + fileSize;
                                        var rounded_size;

                                        if (size === "" || size === 0) {
                                            rounded_size = "-";
                                        } else if (size < 1024) {
                                            rounded_size = size + " B";
                                        } else if (size < 1048576) {
                                            rounded_size = (Math.round(size / 1024)) + " KB";
                                        } else if (size < 1073741824) {
                                            rounded_size = (Math.round(((size * 10) / 1048576)) / 10) + " MB";
                                        } else if (size < 1099511627776) {
                                            rounded_size = (Math.round(((size * 100) / 1073741824)) / 100) + " GB";
                                        } else if (size < 1125899906842624) {
                                            rounded_size = (Math.round(((size * 100) / 1099511627776)) / 100) + " TB";
                                        } else {
                                            rounded_size = (Math.round(((size * 100) / 1125899906842624)) / 100) + " PB";
                                        }

                                        Ext.apply(data, {
                                            shortName: Ext.util.Format.ellipsis(data.file_name, 20),
                                            lock_check_img: lock_check,
                                            file_disp_size: rounded_size,
                                            box_class: box_class,
                                            icon_width: icon_width,
                                            icon_height: icon_height
                                        });

                                        return data;

                                    },
                                    id: 'thumbnailViewSB',
                                    tpl: [
                                        '<tpl for=".">',
                                        '	<div class="{box_class}">',
                                        '		<tpl>',
                                        '			<tpl if="t_file_type == \'mp4\'">',
                                        '					<video class="each-block" controls width="200px" height="140px">',
                                        '						<source src="{thumbnail_image}" type=\'video/mp4; codecs="avc1.42E01E, mp4a.40.2"\' />',
                                        '					//	<p>動画を再生するには<br/>videoタグをサポートした<br/>ブラウザが必要です。</p>',
                                        '					</video>',
                                        '			</tpl>',
                                        '			<tpl if="t_file_type == \'ogg\'">',
                                        '					<video class="each-block" controls width="{icon_width}px" height="{icon_height}px">',
                                        '						<source src="{thumbnail_image}" type=\'video/ogg; codecs="theora, vorbis"\' />',
                                        '					//	<p>動画を再生するには<br/>videoタグをサポートした<br/>ブラウザが必要です。</p>',
                                        '					</video>',
                                        '			</tpl>',
                                        '			<tpl if="t_file_type == \'png\'">',
                                        '					<span class="icon-block">',
                                        '						<img src="{thumbnail_image}" style="max-width:{icon_width}px;max-height: {icon_height}px" />',
                                        '					</span><br/>',
                                        '			</tpl>',
                                        '			<tpl if="t_file_type == \'pdf\'">',
                                        '					<span class="icon-block">',
                                        '						<img src="{thumbnail_image}" style="max-width:{icon_width}px;max-height: {icon_height}px" />',
                                        '					</span><br/>',
                                        '			</tpl>',
                                        '		</tpl>',
                                        '		<caption>',
                                        '			<ul>',
                                        '				<li>ファイル名: {file_name}</li>',
                                        '				<li>サイズ: {file_disp_size}</li>',
                                        '                           <tpl if="box_class != \'thumb-wrapSB-min\'">',
                                        '				         <li>更新日時: {updated_at:date("Y-m-d H:i:s")} <img src="data/{lock_check_img}" /></li>',
                                        '                           </tpl>',
                                        '			</ul>',
                                        '		</caption>',
                                        '	</div>',
                                        '</tpl>',
                                        '<div class="x-clear"></div>'
                                    ],
                                    emptyText: 'データがありません',
                                    itemSelector: 'div.thumb-wrapSB',
                                    multiSelect: true,
                                    overItemCls: 'x-item-over',
                                    singleSelect: true,
                                    store: 'FileDataStoreS',
                                    trackOver: true,
                                    listeners: {
                                        itemdblclick: {
                                            fn: me.onThumbnailViewSBItemDblClick,
                                            scope: me
                                        },
                                        itemcontextmenu: {
                                            fn: me.onThumbnailViewSBItemContextMenu,
                                            scope: me
                                        }
                                    }
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    id: 'filesS_thumbBlock',
                                    displayInfo: true,
                                    store: 'FileDataStoreS'
                                }
                            ]
                        }
                    ]
                }


            ]
        });

        me.callParent(arguments);
    },
    onSearchedListGridPanelItemContextMenu: function (dataview, record, item, index, e, eOpts) {
        tree_context_menu = new Ext.menu.Menu({
            items: [
                displayProperty,
                //displayPropertyExpanded,
                //displayPropertyDetails,
                //new Ext.menu.Separator(),
                openFile,
                        //copyFile,
                        //moveFile,
                        //deleteFile,
                        //new Ext.menu.Separator(),
                        //checkoutFile,
                        //lockFile,
                        //releaseFileOwnership,
                        //settingFileAccessRight,
                        //new Ext.menu.Separator(),
                        //sendingFile,
                        //new Ext.menu.Separator(),
                        //searchFiles,
                        //new Ext.menu.Separator(),
                        //openTrashbox
            ]
        });

        tree_context_menu.showAt(e.getXY());
        return false;

    },
    onIconViewSItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var dataX = record.data;

        var readableRight = dataX.file_readable_status;
        var writableRight = dataX.file_writable_status;

        var editableStatus = dataX.lock;
        var openStatus = dataX.open_status;

        var showFileName = dataX.file_name;
        var fileType = dataX.file_type;

        var contLocation = dataX.cont_location;

        var readChecked = record.data.folder_readable_status;
        var writeChecked = record.data.folder_writable_status;

        doOpenFile(dataX, readableRight, writableRight, editableStatus, openStatus, showFileName, fileType, readChecked, writeChecked, contLocation);

    },
    onThumbnailViewSBItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var dataX = record.data;

        var readableRight = dataX.file_readable_status;
        var writableRight = dataX.file_writable_status;

        var editableStatus = dataX.lock;
        var openStatus = dataX.open_status;

        var showFileName = dataX.file_name;
        var fileType = dataX.file_type;

        var contLocation = dataX.cont_location;

        var readChecked = record.data.folder_readable_status;
        var writeChecked = record.data.folder_writable_status;

        doOpenFile(dataX, readableRight, writableRight, editableStatus, openStatus, showFileName, fileType, readChecked, writeChecked, contLocation);

    },
    onThumbnailViewSBItemContextMenu: function (dataview, record, item, index, e, eOpts) {
        tree_context_menu = new Ext.menu.Menu({
            items: [
                displayProperty,
                //displayPropertyExpanded,
                //displayPropertyDetails,
                //new Ext.menu.Separator(),
                openFile,
                        //copyFile,
                        //moveFile,
                        //deleteFile,
                        //new Ext.menu.Separator(),
                        //checkoutFile,
                        //lockFile,
                        //releaseFileOwnership,
                        //settingFileAccessRight,
                        //new Ext.menu.Separator(),
                        //sendingFile,
                        //new Ext.menu.Separator(),
                        //searchFiles,
                        //new Ext.menu.Separator(),
                        //openTrashbox
            ]
        });

        tree_context_menu.showAt(e.getXY());
        return false;

    },
    onThumbnailViewSLItemDblClick: function (dataview, record, item, index, e, eOpts) {
        var dataX = record.data;

        var readableRight = dataX.file_readable_status;
        var writableRight = dataX.file_writable_status;

        var editableStatus = dataX.lock;
        var openStatus = dataX.open_status;

        var showFileName = dataX.file_name;
        var fileType = dataX.file_type;

        var contLocation = dataX.cont_location;

        var readChecked = record.data.folder_readable_status;
        var writeChecked = record.data.folder_writable_status;

        doOpenFile(dataX, readableRight, writableRight, editableStatus, openStatus, showFileName, fileType, readChecked, writeChecked, contLocation);

    },
    onThumbnailViewSLItemContextMenu: function (dataview, record, item, index, e, eOpts) {
        tree_context_menu = new Ext.menu.Menu({
            items: [
                displayProperty,
                //displayPropertyExpanded,
                //displayPropertyDetails,
                //new Ext.menu.Separator(),
                openFile,
                        //copyFile,
                        //moveFile,
                        //deleteFile,
                        //new Ext.menu.Separator(),
                        //checkoutFile,
                        //lockFile,
                        //releaseFileOwnership,
                        //settingFileAccessRight,
                        //new Ext.menu.Separator(),
                        //sendingFile,
                        //new Ext.menu.Separator(),
                        //searchFiles,
                        //new Ext.menu.Separator(),
                        //openTrashbox
            ]
        });

        tree_context_menu.showAt(e.getXY());
        return false;

    },
    onSearchDispClose: function (button, e, eOpts) {
        Ext.getCmp('searchDsp').hide();
    },
    onListMaxDispSBtnClick: function (button, e, eOpts) {
        listDispSize = 'max';
        Ext.getStore('FileDataStoreS').load({params: {start: 0, limit: 100}});
    },
    onListMdlDispSBtnClick: function (button, e, eOpts) {
        listDispSize = 'mid';
        Ext.getStore('FileDataStoreS').load({params: {start: 0, limit: 50}});
    },
    onListMinDispSBtnClick: function (button, e, eOpts) {
        listDispSize = 'min';
        Ext.getStore('FileDataStoreS').load({params: {start: 0, limit: 25}});
    },
    onBoxMaxDispSBtnClick: function (button, e, eOpts) {
        boxDispSizeS = 'max';
        Ext.getStore('FileDataStoreS').load();
    },
    onBoxMdlDispSBtnClick: function (button, e, eOpts) {
        boxDispSizeS = 'mid';
        Ext.getStore('FileDataStoreS').load();
    },
    onBoxMinDispSBtnClick: function (button, e, eOpts) {
        boxDispSizeS = 'min';
        Ext.getStore('FileDataStoreS').load();
    }


});
