/*
 * File: app/controller/OpenFileAction.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.controller.OpenFileAction', {
	extend: 'Ext.app.Controller',

	refs: [
		{
			ref: 'FileView',
			selector: '#teamDomain'
		}
	],

	onGridpanelItemDblClickA: function(dataview, record, item, index, e, eOpts) {
		var dataX = record.data;

		var readableRight  = dataX.file_readable_status;
		var writableRight  = dataX.file_writable_status;

		var editableStatus = dataX.lock;
		var openStatus     = dataX.open_status;

		var showFileName   = dataX.file_name;
		var fileType       = dataX.file_type;

		var contLocation   = dataX.cont_location;

		var readChecked  = record.data.folder_readable_status;
		var writeChecked = record.data.folder_writable_status;

		doOpenFile(dataX, readableRight, writableRight, editableStatus, openStatus, showFileName, fileType, readChecked, writeChecked, contLocation);

	},

	onGridpanelItemDblClickB: function(dataview, record, item, index, e, eOpts) {
		var dataX = record.data;

		var readableRight  = dataX.file_readable_status;
		var writableRight  = dataX.file_writable_status;

		var editableStatus = dataX.lock;
		var openStatus     = dataX.open_status;

		var showFileName   = dataX.file_name;
		var fileType       = dataX.file_type;

		var contLocation   = dataX.cont_location;

		var readChecked  = record.data.folder_readable_status;
		var writeChecked = record.data.folder_writable_status;

		doOpenFile(dataX, readableRight, writableRight, editableStatus, openStatus, showFileName, fileType, readChecked, writeChecked, contLocation);

	},

	onGridpanelItemDblClickS: function(dataview, record, item, index, e, eOpts) {
		var dataX = record.data;

		var readableRight  = dataX.file_readable_status;
		var writableRight  = dataX.file_writable_status;

		var editableStatus = dataX.lock;
		var openStatus     = dataX.open_status;

		var showFileName   = dataX.file_name;
		var fileType       = dataX.file_type;

		var contLocation   = dataX.cont_location;

		var readChecked  = record.data.folder_readable_status;
		var writeChecked = record.data.folder_writable_status;

		doOpenFile(dataX, readableRight, writableRight, editableStatus, openStatus, showFileName, fileType, readChecked, writeChecked, contLocation);

	},
// アップロード機能↓
        onLocalFileGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
                if ('1' === record.data.node_type) {
                    // フォルダの場合
                    var checker = e.getTarget('.' + Ext.baseCSSPrefix + 'grid-row-checker');
                    if (checker) {
                        // チェックボックスダブルクリックの場合は何もしない
                        return;
                    }
                    doOpenLocalFolder(record);
                }
	},
// アップロード機能↑
        init: function(application) {
		this.control({
			"#listGridPanelA": {
				itemdblclick: this.onGridpanelItemDblClickA
			},
			"#listGridPanelB": {
				itemdblclick: this.onGridpanelItemDblClickB
			},
			"#searchedListGridPanel": {
				itemdblclick: this.onGridpanelItemDblClickS
			},
// アップロード機能↓
                        "#addAgentList": {
				itemdblclick: this.onLocalFileGridpanelItemDblClick
			}
// アップロード機能↑
		});
	}

});
