/*
 * File: app/view/optionWin.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.view.optionWin', {
    extend: 'Ext.window.Window',
    alias: 'widget.optionwin',
    height: 450,
    hidden: false,
    id: 'optionWin',
    itemId: 'optionWin',
    width: 461,
    modal: true,
    layout: {
        type: 'fit'
    },
    title: 'ユーザ情報設定',
    constrain: true,
    initComponent: function () {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'form',
                            frame: true,
                            id: 'changePwForm',
                            itemId: 'changePwForm',
                            padding: 10,
                            title: 'パスワード変更',
                            items: [
                                {
                                    xtype: 'displayfield',
                                    anchor: '100%',
                                    height: 20,
                                    fieldLabel: 'ユーザ名',
                                    labelAlign: 'right',
                                    labelWidth: 150,
                                    name: 'operator_name'
                                },
                                {
                                    xtype: 'displayfield',
                                    anchor: '100%',
                                    height: 20,
                                    hidden: true,
                                    fieldLabel: 'ユーザID',
                                    labelAlign: 'right',
                                    labelWidth: 150,
                                    name: 'operator_id'
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: '現在のパスワード',
                                    labelAlign: 'right',
                                    labelWidth: 150,
                                    name: 'operator_pw',
                                    validateOnChange: false,
                                    inputType: 'password',
                                    validateOnBlur: false,
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    id: 'operator_new_pw',
                                    fieldLabel: '新しいパスワード',
                                    labelAlign: 'right',
                                    labelWidth: 150,
                                    name: 'operator_new_pw',
                                    validateOnChange: false,
                                    inputType: 'password',
                                    validateOnBlur: false,
                                    allowBlank: false
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    id: 'operator_new_pw_cognition',
                                    fieldLabel: '新しいパスワード(確認)',
                                    labelAlign: 'right',
                                    labelWidth: 150,
                                    name: 'operator_new_pw_cognition',
                                    submitValue: false,
                                    validateOnChange: false,
                                    inputType: 'password',
                                    validateOnBlur: false,
                                    allowBlank: false
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    ui: 'footer',
                                    items: [
                                        {
                                            xtype: 'tbfill'
                                        },
                                        {
                                            xtype: 'button',
                                            width: 100,
                                            text: '変更',
                                            tooltip: {
                                                html: '現在使用中のパスワードと新たなパスワードを入力してから<b>変更</b>ボタンを押して下さい。'
                                            },
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick2,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            width: 100,
                                            text: 'キャンセル',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick1,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                beforerender: {
                                    fn: me.onChangePwFormBeforeRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'form',
                            frame: true,
                            hidden: true,
                            id: 'changeOptionForm',
                            padding: 10,
                            title: 'オプション変更',
                            items: [
                                {
                                    xtype: 'textareafield',
                                    anchor: '100%',
                                    hidden: true,
                                    fieldLabel: 'Label',
                                    name: 'operator_id'
                                },
                                {
                                    xtype: 'fieldset',
                                    title: 'ファイル作成日時の設定',
                                    items: [
                                        {
                                            xtype: 'radiogroup',
                                            id: 'select_create_data',
                                            layout: {
                                                type: 'anchor'
                                            },
                                            fieldLabel: 'Label',
                                            hideLabel: true,
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'date1',
                                                    name: 'rule_created_date',
                                                    boxLabel: 'ファイルを初めてサーバ上に作成した日時',
                                                    inputValue: 'server_date'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'date2',
                                                    name: 'rule_created_date',
                                                    boxLabel: 'ローカルファイルの更新日時',
                                                    inputValue: 'local_date'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    title: 'ファイル拡張子の設定',
                                    items: [
                                        {
                                            xtype: 'radiogroup',
                                            id: 'select_extension',
                                            fieldLabel: 'Label',
                                            hideLabel: true,
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'ext1',
                                                    name: 'disp_ext',
                                                    boxLabel: '表示する',
                                                    inputValue: 'show'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'ext2',
                                                    name: 'disp_ext',
                                                    boxLabel: '表示しない',
                                                    inputValue: 'hide'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    title: 'ファイルの自動保存',
                                    items: [
                                        {
                                            xtype: 'radiogroup',
                                            id: 'select_auto_save',
                                            fieldLabel: 'Label',
                                            hideLabel: true,
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'auto1',
                                                    name: 'auto_save',
                                                    boxLabel: '手動',
                                                    inputValue: 'manual'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'auto2',
                                                    name: 'auto_save',
                                                    boxLabel: '自動(確認あり)',
                                                    inputValue: 'auto_cog'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'auto3',
                                                    name: 'auto_save',
                                                    boxLabel: '自動(確認なし)',
                                                    inputValue: 'auto_noncog'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    title: 'ドラッグ&ドロップツリー表示',
                                    items: [
                                        {
                                            xtype: 'radiogroup',
                                            id: 'select_tree_dsp',
                                            fieldLabel: 'Label',
                                            hideLabel: true,
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'tree1',
                                                    name: 'disp_tree',
                                                    boxLabel: '表示する',
                                                    inputValue: 'show'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'tree2',
                                                    name: 'disp_tree',
                                                    boxLabel: '表示しない',
                                                    inputValue: 'hide'
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    ui: 'footer',
                                    items: [
                                        {
                                            xtype: 'tbfill'
                                        },
                                        {
                                            xtype: 'button',
                                            width: 100,
                                            text: 'OK',
                                            tooltip: {
                                                html: '設定内容を確認したらOKを押して下さい。'
                                            },
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClickChangeOption,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            width: 100,
                                            text: 'キャンセル',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClickCloseOption,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                beforerender: {
                                    fn: me.onChangeOptionFormBeforeRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'form',
                            frame: true,
                            itemId: 'changeInfoForm',
                            padding: 10,
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            title: 'ユーザ情報変更',
                            items: [
                                {
                                    xtype: 'label',
                                    html: '<span style="color:orange">以下の項目の変更を変更してください</span>',
                                    margin: '0 0 3 0'
                                },
                                {
                                    xtype: 'fieldset',
                                    flex: 1,
                                    margin: 0,
                                    layout: {
                                        align: 'stretch',
                                        padding: '0 0 3 0',
                                        type: 'vbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            hidden: true,
                                            fieldLabel: 'UID',
                                            name: 'user_id',
                                            validateOnChange: false,
                                            validateOnBlur: false,
                                            maxLength: 80
                                        },
                                        {
                                            xtype: 'textfield',
                                            margin: '3 0 0 0',
                                            fieldLabel: 'ユーザ名',
                                            name: 'user_name',
                                            id: 'opt_user_name',
                                            allowBlank: false,
                                            value: '',
                                            maxLength: 80,
                                            validator: function ()
                                            {
                                                var value = Ext.getCmp('opt_user_name').value;
                                                if (value.trim().length < 1)
                                                {
                                                    var msg = '半角、全角スペースのみは許可されません。';
                                                    return msg;
                                                }
                                                else
                                                {
                                                    return true;
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'label',
                                            html: '<span style="color:orange">* このユーザ名は変更することができます<br/>　既に使われているユーザ名は使用できません</span>',
                                            margin: '0 0 3 10',
                                            text: 'My Label'
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: '氏名',
                                            name: 'user_description',
                                            id: 'opt_user_description',
                                            allowBlank: false,
                                            maxLength: 80,
                                            value: '',
                                            validator: function ()
                                            {
                                                var value = Ext.getCmp('opt_user_description').value;
                                                if (value.trim().length < 1)
                                                {
                                                    var msg = '半角、全角スペースのみは許可されません。';
                                                    return msg;
                                                }
                                                else
                                                {
                                                    return true;
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'fieldset',
                                            height: 70,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    margin: '3 0 3 0',
                                                    fieldLabel: 'メールアドレス',
                                                    labelWidth: 150,
                                                    name: 'user_mail',
                                                    allowBlank: false,
                                                    maxLength: 80,
                                                    vtype: 'email'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    fieldLabel: 'メールアドレス(確認)',
                                                    labelWidth: 150,
                                                    name: 'user_mail2',
                                                    allowBlank: false,
                                                    maxLength: 80,
                                                    vtype: 'email'
                                                },
                                                {
                                                    xtype: 'label',
                                                    hidden: true,
                                                    html: '<span style="color:orange">* メールアドレスは様々な通知に使用しますので、正確に入力して下さい。</span>',
                                                    margin: '0 0 3 10'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: '会社名',
                                            name: 'user_tel',
                                            id: 'opt_user_tel',
                                            allowBlank: false,
                                            maxLength: 80,
                                            validator: function ()
                                            {
                                                var value = Ext.getCmp('opt_user_tel').value;
                                                if (value.trim().length < 1)
                                                {
                                                    var msg = '半角、全角スペースのみは許可されません。';
                                                    return msg;
                                                }
                                                else
                                                {
                                                    return true;
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: '部署',
                                            name: 'user_major',
                                            id: 'opt_user_major',
                                            allowBlank: false,
                                            maxLength: 80,
                                            validator: function ()
                                            {
                                                var value = Ext.getCmp('opt_user_major').value;
                                                if (value.trim().length < 1)
                                                {
                                                    var msg = '半角、全角スペースのみは許可されません。';
                                                    return msg;
                                                }
                                                else
                                                {
                                                    return true;
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            fieldLabel: '社員番号',
                                            name: 'user_org',
                                            id: 'opt_user_org',
                                            allowBlank: false,
                                            maxLength: 80,
                                            validator: function ()
                                            {
                                                var value = Ext.getCmp('opt_user_org').value;
                                                if (value.trim().length < 1)
                                                {
                                                    var msg = '半角、全角スペースのみは許可されません。';
                                                    return msg;
                                                }
                                                else
                                                {
                                                    return true;
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    ui: 'footer',
                                    items: [
                                        {
                                            xtype: 'tbfill'
                                        },
                                        {
                                            xtype: 'button',
                                            formBind: true,
                                            width: 100,
                                            text: '登録',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick3,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            width: 100,
                                            text: 'キャンセル',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                beforerender: {
                                    fn: me.onChangeInfoFormBeforeRender,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },
    onButtonClick2: function (button, e, eOpts) {
        var formX = Ext.getCmp('changePwForm').getForm().getFieldValues();

        var activePw = formX.operator_pw;
        var activeNewPw = formX.operator_new_pw;
        var activeNewPwCoginition = formX.operator_new_pw_cognition;

        if (Ext.isEmpty(activePw)) {
            Ext.Msg.show({
                title: '現在のパスワード入力',
                msg: '現在のパスワードを入力してください',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }
        else if (activePw.trim().length < 1)
        {
            Ext.Msg.show({
                title: '現在のパスワード入力',
                msg: '半角、全角スペースのみは許可されません。',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }
        else if (activePw.match(/[^A-z0-9]/))
        {
            Ext.Msg.show({
                title: '現在のパスワード入力',
                msg: '全角文字は許可されません。',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }

        if (Ext.isEmpty(activeNewPw) || Ext.isEmpty(activeNewPwCoginition)) {
            Ext.Msg.show({
                title: '新パスワード入力',
                msg: '新パスワードを入力してください',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }
        else if (activeNewPw.trim().length < 1 || activeNewPwCoginition.trim().length < 1)
        {
            Ext.Msg.show({
                title: '新パスワード入力',
                msg: '半角、全角スペースのみは許可されません。',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }
        if (activePw.match(/[^A-z0-9!-/\[-~]/))
        {
            Ext.Msg.show({
                title: '新パスワード入力',
                msg: '全角文字は許可されません。',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }

        if (activeNewPw !== activeNewPwCoginition) {
            Ext.Msg.show({
                title: '新パスワード不一致',
                msg: '新パスワードが一致しません。再入力してください',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }

        if (activeNewPw.length > 80) {
            Ext.Msg.show({
                title: 'パスワード長',
                msg: 'パスワードが長すぎます',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }

        formX = Ext.apply({session_id: this_session_id}, formX);
        formX = Ext.apply({request_type: 'change_pw'}, formX);

        Ext.Ajax.request({
            url: 'tdx/updatedata.tdx',
            method: 'POST',
            jsonData: formX,
            success: handleSuccess,
            failure: handleFailure
        });

        function handleSuccess(response) {
            obj = Ext.decode(response.responseText);
            var request_success = obj.success;

            if (request_success === false) {
                var request_errors = obj.errors;
                Ext.Msg.show({
                    title: 'パスワード変更失敗',
                    msg: request_errors,
                    buttons: Ext.Msg.OK
                });
            } else {
                Ext.Msg.show({
                    title: 'パスワード変更成功',
                    msg: 'パスワードを変更しました',
                    buttons: Ext.Msg.OK
                });
            }
            return;
        }

        function handleFailure(response) {
            Ext.Msg.show({
                title: 'パスワード変更失敗',
                msg: 'サーバとの通信に失敗しました',
                buttons: Ext.Msg.OK
            });
        }

        this.close();

    },
    onButtonClick1: function (button, e, eOpts) {
        this.close();

    },
    onChangePwFormBeforeRender: function (component, eOpts) {
        component.getForm().setValues({
            operator_id: this_op_id,
            operator_name: this_op_name
        });

    },
    onButtonClickChangeOption: function (button, e, eOpts) {
        var formX = Ext.getCmp('changeOptionForm').getForm().getFieldValues();
        formX = Ext.apply({session_id: this_session_id}, formX);
        var dataZ = Ext.apply({request_type: "change_options"}, formX);

        Ext.Ajax.request({
            url: 'tdx/updatedata.tdx',
            method: 'POST',
            jsonData: dataZ,
            success: handleSuccess,
            failure: handleFailure
        });

        function handleSuccess(response) {
            obj = Ext.decode(response.responseText);
            var request_success = obj.success;

            if (request_success === false) {
                var request_errors = obj.errors;
                Ext.Msg.show({
                    title: 'オプション設定変更失敗',
                    msg: request_errors,
                    buttons: Ext.Msg.OK
                });
            } else {
                Ext.getStore('ActiveOperatorStore').load();
            }
            return;
        }

        function handleFailure(response) {
            Ext.Msg.show({
                title: 'オプション設定変更失敗',
                msg: 'サーバとの通信に失敗しました',
                buttons: Ext.Msg.OK
            });
        }

        this.close();
    },
    onButtonClickCloseOption: function (button, e, eOpts) {
        this.close();
    },
    onChangeOptionFormBeforeRender: function (component, eOpts) {
        component.getForm().setValues({
            operator_id: this_op_id,
            rule_created_date: this_op_created_date,
            disp_ext: this_op_disp_ext,
            auto_save: this_op_auto_save,
            disp_tree: this_op_disp_tree
        });

    },
    onButtonClick3: function (button, e, eOpts) {
        var form = Ext.ComponentQuery.query('#changeInfoForm')[0].getValues();

        var userMail = form.user_mail;
        var userMail2 = form.user_mail2;

        if (userMail !== userMail2) {
            Ext.Msg.show({
                title: 'メールアドレス不一致',
                msg: 'メールアドレスが一致しません。再入力してください',
                icon: Ext.Msg.ERROR,
                buttons: Ext.Msg.OK
            });
            return;
        }

        var sendingData = Ext.apply({session_id: this_session_id}, form);
        sendingData = Ext.apply({request_type: 'change_user_info'}, sendingData);

        Ext.Ajax.request({
            url: 'tdx/updatedata.tdx',
            method: 'POST',
            jsonData: sendingData,
            success: handleSuccess,
            failure: handleFailure
        });

        function handleSuccess(response) {
            obj = Ext.decode(response.responseText);
            var request_success = obj.success;

            if (request_success === false) {
                var request_errors = obj.errors;
                Ext.Msg.show({
                    title: '利用者登録情報変更失敗',
                    msg: request_errors,
                    buttons: Ext.Msg.OK
                });
            } else {
                Ext.Msg.show({
                    title: '利用者登録情報変更成功',
                    msg: '利用者登録情報を変更しました',
                    buttons: Ext.Msg.OK
                });
                Ext.getStore('ActiveOperatorStore').load();
            }
            return;
        }

        function handleFailure(response) {
            Ext.Msg.show({
                title: '利用者登録情報変更失敗',
                msg: 'サーバとの通信に失敗しました',
                buttons: Ext.Msg.OK
            });
        }

        this.close();
    },
    onButtonClick: function (button, e, eOpts) {
        this.close();
    },
    onChangeInfoFormBeforeRender: function (component, eOpts) {
        component.getForm().setValues({
            user_id: this_op_id,
            user_name: this_op_name,
            user_description: this_op_description,
            user_mail: this_op_mail,
            user_tel: this_op_tel,
            user_major: this_op_major,
            user_org: this_op_org
        });
    }

});
