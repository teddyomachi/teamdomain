/*
 * File: app/view/ActivationWin.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Teamdomain.view.ActivationWin', {
	extend: 'Ext.window.Window',

	height: 420,
	itemId: 'activationWin',
	minWidth: 350,
	width: 461,
	layout: {
		type: 'fit'
	},
	closable: false,
	title: 'アクティベーション',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'form',
					itemId: 'activationForm',
					autoScroll: true,
					layout: {
						align: 'stretch',
						type: 'vbox'
					},
					bodyPadding: 10,
					bodyStyle: 'background:black',
					items: [
						{
							xtype: 'label',
							html: '<span style="color:orange">以下の項目を入力してください</span>',
							margin: '0 0 3 0',
							text: ''
						},
						{
							xtype: 'fieldset',
							flex: 1,
							margin: 0,
							layout: {
								align: 'stretch',
								padding: '0 0 3 0',
								type: 'vbox'
							},
							items: [
								{
									xtype: 'textfield',
									hidden: true,
									fieldLabel: 'UID',
									name: 'user_id'
								},
								{
									xtype: 'textfield',
									margin: '3 0 0 0',
									fieldLabel: 'ユーザ名',
									name: 'user_name',
									allowBlank: false
								},
								{
									xtype: 'label',
									html: '<span style="color:orange">* 必ず変更してください<br/>* 既に使われているユーザ名は使用できません</span>',
									margin: '0 0 3 10',
									text: ''
								},
								{
									xtype: 'textfield',
									fieldLabel: '氏名',
									name: 'user_description',
									allowBlank: false
								},
								{
									xtype: 'fieldset',
									height: 70,
									layout: {
										align: 'stretch',
										type: 'vbox'
									},
									items: [
										{
											xtype: 'textfield',
											margin: '3 0 3 0',
											fieldLabel: 'メールアドレス',
											labelWidth: 150,
											name: 'user_mail',
											allowBlank: false,
											vtype: 'email'
										},
										{
											xtype: 'textfield',
											fieldLabel: 'メールアドレス(確認)',
											labelWidth: 150,
											name: 'user_mail2',
											allowBlank: false,
											vtype: 'email'
										},
										{
											xtype: 'label',
											hidden: true,
											html: '<span style="color:orange">* メールアドレスは様々な通知に使用しますので、正確に入力して下さい。</span>',
											margin: '0 0 3 10'
										}
									]
								},
								{
									xtype: 'textfield',
									fieldLabel: '学生証番号',
									name: 'user_tel',
									allowBlank: false
								},
								{
									xtype: 'textfield',
									fieldLabel: '専攻',
									name: 'user_major',
									allowBlank: false
								},
								{
									xtype: 'textfield',
									fieldLabel: '研究室',
									name: 'user_org',
									allowBlank: false
								}
							]
						}
					],
					dockedItems: [
						{
							xtype: 'toolbar',
							dock: 'bottom',
							items: [
								{
									xtype: 'button',
									text: 'キャンセル',
									listeners: {
										click: {
											fn: me.onButtonClick,
											scope: me
										}
									}
								},
								{
									xtype: 'tbfill'
								},
								{
									xtype: 'button',
									formBind: true,
									text: '登録',
									listeners: {
										click: {
											fn: me.onButtonClick1,
											scope: me
										}
									}
								}
							]
						}
					]
				}
			]
		});

		me.callParent(arguments);
	},

	onButtonClick: function(button, e, eOpts) {
		button.up('.window').close();
		Ext.create('Teamdomain.view.LoginWin').show();
	},

	onButtonClick1: function(button, e, eOpts) {
		var form = Ext.ComponentQuery.query('#activationForm')[0].getValues();

		var userName  = form.user_name;
		var userDesc  = form.user_description;
		var userMail  = form.user_mail;
		var userMail2 = form.user_mail2;
		var userTel   = form.user_tel;
		var userMaj   = form.user_major;
		var userOrg   = form.user_org;


		if (loggedInUserName === userName) {
			Ext.Msg.show({
				title:'ユーザ名入力',
				msg: 'ユーザ名を変更して下さい。',
				icon: Ext.Msg.ERROR,
				buttons: Ext.Msg.OK
			});
			return;
		}


		/*
		if (Ext.isEmpty(userDesc)) {
		Ext.Msg.show({
		title:'氏名入力',
		msg: '氏名を入力して下さい。',
		icon: Ext.Msg.ERROR,
		buttons: Ext.Msg.OK
		});
		return;
		}

		if (Ext.isEmpty(userMail)) {
		Ext.Msg.show({
		title:'メールアドレス入力',
		msg: 'メールアドレスを入力して下さい。',
		icon: Ext.Msg.ERROR,
		buttons: Ext.Msg.OK
		});
		return;
		}

		if (Ext.isEmpty(userMail2)) {
		Ext.Msg.show({
		title:'メールアドレス(確認)入力',
		msg: 'メールアドレス(確認用)を入力して下さい。',
		icon: Ext.Msg.ERROR,
		buttons: Ext.Msg.OK
		});
		return;
		}

		if (Ext.isEmpty(userTel)) {
		Ext.Msg.show({
		title:'学生番号入力',
		msg: '学生番号を入力して下さい。',
		icon: Ext.Msg.ERROR,
		buttons: Ext.Msg.OK
		});
		return;
		}

		if (Ext.isEmpty(userMaj)) {
		Ext.Msg.show({
		title:'専攻入力',
		msg: '専攻を入力して下さい。',
		icon: Ext.Msg.ERROR,
		buttons: Ext.Msg.OK
		});
		return;
		}
		*/

		if (userMail !== userMail2) {
			Ext.Msg.show({
				title:'メールアドレス不一致',
				msg: 'メールアドレスが一致しません。再入力して下さい。',
				icon: Ext.Msg.ERROR,
				buttons: Ext.Msg.OK
			});
			return;
		}

		//-------------------------------
		var sendingData = Ext.apply({session_id: Ses_id}, form);
		sendingData = Ext.apply({request_type: 'user_activation'}, sendingData);

		//------------------
		Ext.Ajax.request({
			url: 'tdx/updatedata.tdx',
			//url: 'activation.php',
			method: 'POST',
			jsonData: sendingData,
			success: handleSuccess,
			failure: handleFailure
		});

		function handleSuccess(response) {
			obj = Ext.decode(response.responseText);
			var request_success = obj.success;

			if (request_success === false) {
				var request_errors = obj.errors;
				Ext.Msg.show({
					title:'初期設定失敗',
					msg: request_errors,
					buttons: Ext.Msg.OK
				});
				//Ext.ComponentQuery.query('#activationForm')[0].getForm().reset();
			} else {
				//var redirect = '../ihab411/index.html?ses_id=' + Ses_id;
				var redirect = '../ihab/index.html?ses_id=' + Ses_id;
				window.location = redirect;	
			}
		}

		function handleFailure(response) {
			Ext.Msg.show({
				title:'初期設定失敗',
				msg: 'サーバとの通信に失敗しました。',
				buttons: Ext.Msg.OK
			});
			Ext.ComponentQuery.query('#activationForm')[0].getForm().reset();
		}


	}

});