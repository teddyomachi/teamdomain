/*
 * File: app/store/LocalFolderDataStore.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.store.FileDataStoreB',
        {
            extend: 'Ext.data.Store',
            requires: [
                'TeamDomain.model.LocalFolderData',
                'TeamDomain.controller.JsonAjaxProxy'
            ],
            constructor: function (cfg)
            {
                var me = this;
                cfg = cfg ||
                        {};
                me.callParent([Ext.apply(
                            {
                                model: 'TeamDomain.model.LocalFolderData',
                                storeId: 'FileDataStoreB',
                                autoLoad: true,
                                proxy:
                                        {
                                            actionMethods:
                                                    {
                                                        create: 'POST',
                                                        destroy: 'POST',
                                                        read: 'POST',
                                                        update: 'POST'
                                                    },
                                            type: 'jsonajax',
//                url: 'http://192.168.100.8:18880/spinagent/spin_api_request',
                                            url: 'http://127.0.0.1:18880/spinagent/spin_api_request',
                                            reader:
                                                    {
                                                        type: 'json',
                                                        root: 'tree_node'
                                                    },
                                            writer:
                                                    {
                                                        type: 'json',
                                                        encode: false
                                                    }
                                        },
                                listeners:
                                        {
                                            beforeload: function (me, options)
                                            {
                                                var formX;
                                                formX = Ext.apply(
                                                        {
                                                            session_id: this_session_id
                                                        }, formX);
                                                formX = Ext.apply(
                                                        {
                                                            request_type: 'get_node_list'
                                                        }, formX);
                                                formX = Ext.apply(
                                                        {
                                                            params: ['$HOME', 1, true]
                                                        }, formX);

                                                me.jsonData = formX;
                                            }
                                        }
                            }, cfg)]);
            }
        });
