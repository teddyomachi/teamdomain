/*
 * File: app/view/Trashbox.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeamDomain.view.ClipBoard', {
    extend: 'Ext.window.Window',
    alias: 'widget.clipBoard',
    height: 500,
    hidden: false,
    id: 'clipBoard',
    itemId: 'clipBoard',
    width: 450,
    layout: {
        type: 'fit'
    },
    title: 'クリップボード',
    constrain: true,
    initComponent: function () {
        var me = this;
        try {
            Ext.applyIf(me, {
                items: [
                    {
                        xtype: 'fieldset',
                        layout: {
                            align: 'stretch',
                            type: 'vbox'
                        },
                        title: 'コピーしたファイル',
                        items: [
                            {
                                xtype: 'gridpanel',
                                flex: 1,
                                itemId: 'clipBoardList',
                                margin: '5 0 10 0',
                                autoScroll: true,
                                viewConfig:
                                    {
                                        emptyText: 'データがありません'
                                    },
                                store: 'ClipBoardDataStore',
                                selModel: Ext.create('Ext.selection.CheckboxModel', {
                                }),
                                dockedItems: [
                                    {
                                        xtype: 'pagingtoolbar',
                                        dock: 'bottom',
                                        weight: 2,
                                        displayInfo: true,
                                        store: 'ClipBoardDataStore'
                                    },
                                    {
                                        xtype: 'toolbar',
                                        dock: 'bottom',
                                        weight: 1,
                                        ui: 'footer',
                                        items: [
                                            {
                                                xtype: 'button',
                                                handler: function (button, event) {
                                                    var data = [];
                                                    var dataX = Ext.apply({session_id: this_session_id}, data);
                                                    dataX = Ext.apply({request_type: "clipboard_all_clear"}, dataX);

                                                    Ext.Ajax.request({
                                                        url: 'tdx/updatedata.tdx',
                                                        timeout: 0,
                                                        jsonData: dataX,
                                                        success: handleSuccess,
                                                        failure: handleFailure
                                                    });

                                                    function handleSuccess(response) {
                                                        obj = Ext.decode(response.responseText);
                                                        var request_success = obj.success;

                                                        if (request_success === false) {
                                                            var request_errors = obj.errors;
                                                            Ext.Msg.show({
                                                                title: '「クリップボードの全クリア」の失敗',
                                                                msg: request_errors,
                                                                buttons: Ext.Msg.OK
                                                            });
                                                        } else {
                                                            Ext.getStore('ClipBoardDataStore').load();
                                                        }
                                                        return;
                                                    }

                                                    function handleFailure(response) {
                                                        Ext.Msg.show({
                                                            title: '「クリップボードの全クリア」の失敗',
                                                            msg: 'サーバとの通信に失敗しました。',
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    }
                                                },
                                                margin: '5 5 0 0',
                                                width: 100,
                                                text: '全クリア',
                                                tooltip: {
                                                    html: 'クリップボードを全てクリアします。'
                                                },
                                                tooltipType: 'title'
                                            },
                                            {
                                                xtype: 'button',
                                                handler: function (button, event) {
                                                    var componentM = Ext.getCmp('clipBoard');
                                                    var grid = componentM.down('#clipBoardList');

                                                    var records = grid.getSelectionModel().getSelection(), data = [];

                                                    if (Ext.isEmpty(records)) {
                                                        Ext.Msg.show({
                                                            title: 'ファイル/フォルダ選択',
                                                            msg: 'ファイル/フォルダを選択して下さい。',
                                                            icon: Ext.Msg.ERROR,
                                                            buttons: Ext.Msg.OK
                                                        });
                                                        return;
                                                    }

                                                    for (var i = 0; i < records.length; i++) {
                                                        data.push(records[i].data);
                                                    }

                                                    var dataX = Ext.apply({session_id: this_session_id}, data);
                                                    dataX = Ext.apply({request_type: "clipboard_clear"}, dataX);

                                                    Ext.Ajax.request({
                                                        url: 'tdx/updatedata.tdx',
                                                        timeout: 0,
                                                        jsonData: dataX,
                                                        success: handleSuccess,
                                                        failure: handleFailure
                                                    });

                                                    function handleSuccess(response) {
                                                        obj = Ext.decode(response.responseText);
                                                        var request_success = obj.success;

                                                        if (request_success === false) {
                                                            var request_errors = obj.errors;
                                                            Ext.Msg.show({
                                                                title: '「クリップボードのフォルダ/ファイルをクリア」の失敗',
                                                                msg: request_errors,
                                                                buttons: Ext.Msg.OK
                                                            });
                                                        } else {
                                                            Ext.getStore('ClipBoardDataStore').load();
                                                        }
                                                        return;
                                                    }

                                                    function handleFailure(response) {
                                                        Ext.Msg.show({
                                                            title: '「クリップボードのフォルダ/ファイルをクリア」の失敗',
                                                            msg: 'サーバとの通信に失敗しました。',
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    }
                                                },
                                                margin: '5 5 0 0',
                                                width: 100,
                                                text: 'クリア',
                                                tooltip: {
                                                    html: '選択択したフォルダとファイルをクリップボードよりクリアします。'
                                                },
                                                tooltipType: 'title'
                                            },
                                            {
                                                xtype: 'button',
                                                handler: function (button, event) {
                                                    var componentM = Ext.getCmp('clipBoard');
                                                    var grid = componentM.down('#clipBoardList');

                                                    var records = grid.getSelectionModel().getSelection(), data = [];

                                                    if (Ext.isEmpty(records)) {
                                                        Ext.Msg.show({
                                                            title: 'ファイル/フォルダ選択',
                                                            msg: 'ファイル/フォルダを選択して下さい。',
                                                            icon: Ext.Msg.ERROR,
                                                            buttons: Ext.Msg.OK
                                                        });
                                                        return;
                                                    }

                                                    for (var i = 0; i < records.length; i++) {
                                                        data.push(records[i].data);
                                                    }

                                                    var dataX = Ext.apply({session_id: this_session_id}, data);
                                                    dataX = Ext.apply({request_type: "paste_file"}, dataX);

                                                    Ext.Ajax.request({
                                                        url: 'tdx/updatedata.tdx',
                                                        timeout: 0,
                                                        jsonData: dataX,
                                                        success: handleSuccess,
                                                        failure: handleFailure
                                                    });

                                                    function handleSuccess(response) {
                                                        obj = Ext.decode(response.responseText);
                                                        var request_success = obj.success;

                                                        if (request_success === false) {
                                                            var request_errors = obj.errors;
                                                            Ext.Msg.show({
                                                                title: 'クリップボードのフォルダ/ファイルの貼付失敗',
                                                                msg: request_errors,
                                                                buttons: Ext.Msg.OK
                                                            });
                                                        } else {
                                                            requestRefresh3();
                                                        }
                                                        return;
                                                    }

                                                    function handleFailure(response) {
                                                        Ext.Msg.show({
                                                            title: 'クリップボードのフォルダ/ファイルの貼付失敗',
                                                            msg: 'サーバとの通信に失敗しました。',
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    }

                                                    //ファイルリスト再読み込み用
                                                    function requestRefresh3() {
                                                        var requestRefreshData = Ext.apply({session_id: this_session_id});
                                                        requestRefreshData = Ext.apply({event_type: "property_paste_file"}, requestRefreshData);
                                                        requestRefreshData = Ext.apply({request_type: "update_folder_list"}, requestRefreshData);

                                                        Ext.Ajax.request({
                                                            url: 'tdx/updatedata.tdx',
                                                            jsonData: requestRefreshData,
                                                            success: handleSuccess3,
                                                            failure: handleFailure3
                                                        });

                                                    }

                                                    function handleSuccess3(response) {
                                                        obj = Ext.decode(response.responseText);

                                                        var request_success = obj.success;
                                                        var request_status = obj.status;

                                                        if (request_success === false) {
                                                            var request_errors = obj.errors;
                                                            Ext.Msg.show({
                                                                title: 'クリップボードのフォルダ/ファイルの貼付失敗',
                                                                msg: request_errors,
                                                                buttons: Ext.Msg.OK
                                                            });
                                                        } else {
                                                            Ext.getStore('ClipBoardDataStore').load();
                                                            Ext.getStore('FolderDataStoreA').load();
                                                            Ext.getStore('FileDataStoreA').load();
                                                        }
                                                    }

                                                    function handleFailure3(response) {
                                                        Ext.Msg.show({
                                                            title: ' クリップボードのフォルダ/ファイルの貼付失敗',
                                                            msg: 'サーバとの通信に失敗しました。',
                                                            buttons: Ext.Msg.OK
                                                        });
                                                    }
                                                },
                                                margin: '5 5 0 0',
                                                width: 100,
                                                text: '貼り付け',
                                                tooltip: '選択したフォルダとファイルを貼り付けます。',
                                                tooltipType: 'title'
                                            }
                                        ]
                                    }
                                ],
                                columns: [
                                    {
                                        xtype: 'gridcolumn',
                                        hidden: true,
                                        dataIndex: 'node_hash_key',
                                        hideable: false,
                                        text: 'node_hash_key'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        hidden: true,
                                        dataIndex: 'hash_key',
                                        hideable: false,
                                        text: 'Hash_key'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        hidden: true,
                                        dataIndex: 'cont_location',
                                        hideable: false,
                                        text: 'Cont_location'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        dataIndex: 'file_name',
                                        text: '名前',
                                        flex: 1
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        width: 40,
                                        dataIndex: 'file_type',
                                        text: '種類'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {
                                            var fileSizeUpper = record.data.file_size_upper;
                                            var fileSize = record.data.file_size;
                                            var size = fileSizeUpper * Math.pow(2, 31) + fileSize;

                                            if (size === "") {
                                                return "-";
                                            } else if (size < 1024) {
                                                return size + " B";
                                            } else if (size < 1048576) {
                                                return (Math.round(size / 1024)) + " KB";
                                            } else if (size < 1073741824) {
                                                return (Math.round(((size * 10) / 1048576)) / 10) + " MB";
                                            } else if (size < 1099511627776) {
                                                return (Math.round(((size * 100) / 1073741824)) / 100) + " GB";
                                            } else if (size < 1125899906842624) {
                                                return (Math.round(((size * 100) / 1099511627776)) / 100) + " TB";
                                            } else {
                                                return (Math.round(((size * 100) / 1125899906842624)) / 100) + " PB";
                                            }

                                        },
                                        width: 80,
                                        align: 'right',
                                        dataIndex: 'file_size',
                                        text: 'サイズ'
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        hidden: true,
                                        dataIndex: 'url',
                                        text: 'URL',
                                        flex: 1
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        width: 60,
                                        dataIndex: 'opr_disp',
                                        text: '操作 '
                                    }
                                ]
                            }
                        ]
                    }
                ],
                listeners: {
                    afterrender: {
                        fn: me.onClipBoardAfterRender,
                        scope: me
                    }
                }
            });

            me.callParent(arguments);

        } catch (e) {
            Ext.Msg.show({
                title: 'クリップボードのフォルダ/ファイルの貼付失敗',
                msg: e,
                buttons: Ext.Msg.OK
            });
        }

    },
    onClipBoardAfterRender: function (component, eOpts) {
        Ext.getStore('ClipBoardDataStore').load();
    }

});
